// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: broker/v1/message.proto

package brokerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PublishMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the broker message used to trace the end-to-end journey.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Subject of the operation reply inbox if a response(s) is expected from the
	// operation. Can be left empty if no response is expected.
	OperationReplyInbox string `protobuf:"bytes,2,opt,name=operation_reply_inbox,json=operationReplyInbox,proto3" json:"operation_reply_inbox,omitempty"`
	// Operation to perform on the downstream NATS server.
	//
	// Types that are valid to be assigned to Operation:
	//
	//	*PublishMessage_Request
	//	*PublishMessage_StartConsumer
	//	*PublishMessage_StopConsumer
	//	*PublishMessage_SendConsumerHeartbeat
	Operation     isPublishMessage_Operation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishMessage) Reset() {
	*x = PublishMessage{}
	mi := &file_broker_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMessage) ProtoMessage() {}

func (x *PublishMessage) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMessage.ProtoReflect.Descriptor instead.
func (*PublishMessage) Descriptor() ([]byte, []int) {
	return file_broker_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *PublishMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PublishMessage) GetOperationReplyInbox() string {
	if x != nil {
		return x.OperationReplyInbox
	}
	return ""
}

func (x *PublishMessage) GetOperation() isPublishMessage_Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *PublishMessage) GetRequest() *PublishMessage_OperationRequest {
	if x != nil {
		if x, ok := x.Operation.(*PublishMessage_Request); ok {
			return x.Request
		}
	}
	return nil
}

func (x *PublishMessage) GetStartConsumer() *PublishMessage_OperationStartConsumer {
	if x != nil {
		if x, ok := x.Operation.(*PublishMessage_StartConsumer); ok {
			return x.StartConsumer
		}
	}
	return nil
}

func (x *PublishMessage) GetStopConsumer() *PublishMessage_OperationStopConsumer {
	if x != nil {
		if x, ok := x.Operation.(*PublishMessage_StopConsumer); ok {
			return x.StopConsumer
		}
	}
	return nil
}

func (x *PublishMessage) GetSendConsumerHeartbeat() *PublishMessage_OperationSendConsumerHeartbeat {
	if x != nil {
		if x, ok := x.Operation.(*PublishMessage_SendConsumerHeartbeat); ok {
			return x.SendConsumerHeartbeat
		}
	}
	return nil
}

type isPublishMessage_Operation interface {
	isPublishMessage_Operation()
}

type PublishMessage_Request struct {
	// Publish a message to the downstream NATS server and block until a reply
	// is received.
	Request *PublishMessage_OperationRequest `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

type PublishMessage_StartConsumer struct {
	// Start an ephemeral JetStream consumer on a stream that exists on the
	// downstream NATS server.
	StartConsumer *PublishMessage_OperationStartConsumer `protobuf:"bytes,4,opt,name=start_consumer,json=startConsumer,proto3,oneof"`
}

type PublishMessage_StopConsumer struct {
	// Stop a consumer.
	StopConsumer *PublishMessage_OperationStopConsumer `protobuf:"bytes,5,opt,name=stop_consumer,json=stopConsumer,proto3,oneof"`
}

type PublishMessage_SendConsumerHeartbeat struct {
	// Send a consumer heartbeat to keep the connection alive.
	// Heartbeats should be sent every 15s, but a max of 30s is permitted before
	// the consumer is stopped due to inactivity.
	SendConsumerHeartbeat *PublishMessage_OperationSendConsumerHeartbeat `protobuf:"bytes,6,opt,name=send_consumer_heartbeat,json=sendConsumerHeartbeat,proto3,oneof"`
}

func (*PublishMessage_Request) isPublishMessage_Operation() {}

func (*PublishMessage_StartConsumer) isPublishMessage_Operation() {}

func (*PublishMessage_StopConsumer) isPublishMessage_Operation() {}

func (*PublishMessage_SendConsumerHeartbeat) isPublishMessage_Operation() {}

type ReplyMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the broker message used to trace the end-to-end journey.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Subject of the reply inbox.
	Inbox string `protobuf:"bytes,2,opt,name=inbox,proto3" json:"inbox,omitempty"`
	// Content of the reply message.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// Error message if the published command failed to be handled.
	Error         *string `protobuf:"bytes,4,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyMessage) Reset() {
	*x = ReplyMessage{}
	mi := &file_broker_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyMessage) ProtoMessage() {}

func (x *ReplyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyMessage.ProtoReflect.Descriptor instead.
func (*ReplyMessage) Descriptor() ([]byte, []int) {
	return file_broker_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *ReplyMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReplyMessage) GetInbox() string {
	if x != nil {
		return x.Inbox
	}
	return ""
}

func (x *ReplyMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReplyMessage) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type Credentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jwt           string                 `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Seed          string                 `protobuf:"bytes,2,opt,name=seed,proto3" json:"seed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	mi := &file_broker_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_broker_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *Credentials) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

func (x *Credentials) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

type PublishMessage_OperationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Subject on the downstream NATS server to publish the message on.
	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	// Content of the message.
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishMessage_OperationRequest) Reset() {
	*x = PublishMessage_OperationRequest{}
	mi := &file_broker_v1_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishMessage_OperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMessage_OperationRequest) ProtoMessage() {}

func (x *PublishMessage_OperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMessage_OperationRequest.ProtoReflect.Descriptor instead.
func (*PublishMessage_OperationRequest) Descriptor() ([]byte, []int) {
	return file_broker_v1_message_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PublishMessage_OperationRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PublishMessage_OperationRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PublishMessage_OperationStartConsumer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the ephemeral JetStream consumer.
	ConsumerId string `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	// Stream to create the ephemeral consumer on.
	StreamName string `protobuf:"bytes,2,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	// User credentials to use when creating a new client connection.
	UserCreds     *Credentials `protobuf:"bytes,3,opt,name=user_creds,json=userCreds,proto3,oneof" json:"user_creds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishMessage_OperationStartConsumer) Reset() {
	*x = PublishMessage_OperationStartConsumer{}
	mi := &file_broker_v1_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishMessage_OperationStartConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMessage_OperationStartConsumer) ProtoMessage() {}

func (x *PublishMessage_OperationStartConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMessage_OperationStartConsumer.ProtoReflect.Descriptor instead.
func (*PublishMessage_OperationStartConsumer) Descriptor() ([]byte, []int) {
	return file_broker_v1_message_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PublishMessage_OperationStartConsumer) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *PublishMessage_OperationStartConsumer) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *PublishMessage_OperationStartConsumer) GetUserCreds() *Credentials {
	if x != nil {
		return x.UserCreds
	}
	return nil
}

type PublishMessage_OperationStopConsumer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the ephemeral JetStream consumer.
	ConsumerId    string `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishMessage_OperationStopConsumer) Reset() {
	*x = PublishMessage_OperationStopConsumer{}
	mi := &file_broker_v1_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishMessage_OperationStopConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMessage_OperationStopConsumer) ProtoMessage() {}

func (x *PublishMessage_OperationStopConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMessage_OperationStopConsumer.ProtoReflect.Descriptor instead.
func (*PublishMessage_OperationStopConsumer) Descriptor() ([]byte, []int) {
	return file_broker_v1_message_proto_rawDescGZIP(), []int{0, 2}
}

func (x *PublishMessage_OperationStopConsumer) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type PublishMessage_OperationSendConsumerHeartbeat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the ephemeral JetStream consumer.
	ConsumerId    string `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishMessage_OperationSendConsumerHeartbeat) Reset() {
	*x = PublishMessage_OperationSendConsumerHeartbeat{}
	mi := &file_broker_v1_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishMessage_OperationSendConsumerHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMessage_OperationSendConsumerHeartbeat) ProtoMessage() {}

func (x *PublishMessage_OperationSendConsumerHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_broker_v1_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMessage_OperationSendConsumerHeartbeat.ProtoReflect.Descriptor instead.
func (*PublishMessage_OperationSendConsumerHeartbeat) Descriptor() ([]byte, []int) {
	return file_broker_v1_message_proto_rawDescGZIP(), []int{0, 3}
}

func (x *PublishMessage_OperationSendConsumerHeartbeat) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

var File_broker_v1_message_proto protoreflect.FileDescriptor

const file_broker_v1_message_proto_rawDesc = "" +
	"\n" +
	"\x17broker/v1/message.proto\x12\tbroker.v1\"\xb7\x06\n" +
	"\x0ePublishMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x15operation_reply_inbox\x18\x02 \x01(\tR\x13operationReplyInbox\x12F\n" +
	"\arequest\x18\x03 \x01(\v2*.broker.v1.PublishMessage.OperationRequestH\x00R\arequest\x12Y\n" +
	"\x0estart_consumer\x18\x04 \x01(\v20.broker.v1.PublishMessage.OperationStartConsumerH\x00R\rstartConsumer\x12V\n" +
	"\rstop_consumer\x18\x05 \x01(\v2/.broker.v1.PublishMessage.OperationStopConsumerH\x00R\fstopConsumer\x12r\n" +
	"\x17send_consumer_heartbeat\x18\x06 \x01(\v28.broker.v1.PublishMessage.OperationSendConsumerHeartbeatH\x00R\x15sendConsumerHeartbeat\x1a@\n" +
	"\x10OperationRequest\x12\x18\n" +
	"\asubject\x18\x01 \x01(\tR\asubject\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x1a\xa5\x01\n" +
	"\x16OperationStartConsumer\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12\x1f\n" +
	"\vstream_name\x18\x02 \x01(\tR\n" +
	"streamName\x12:\n" +
	"\n" +
	"user_creds\x18\x03 \x01(\v2\x16.broker.v1.CredentialsH\x00R\tuserCreds\x88\x01\x01B\r\n" +
	"\v_user_creds\x1a8\n" +
	"\x15OperationStopConsumer\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x1aA\n" +
	"\x1eOperationSendConsumerHeartbeat\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerIdB\v\n" +
	"\toperation\"m\n" +
	"\fReplyMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05inbox\x18\x02 \x01(\tR\x05inbox\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x19\n" +
	"\x05error\x18\x04 \x01(\tH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"3\n" +
	"\vCredentials\x12\x10\n" +
	"\x03jwt\x18\x01 \x01(\tR\x03jwt\x12\x12\n" +
	"\x04seed\x18\x02 \x01(\tR\x04seedB\x98\x01\n" +
	"\rcom.broker.v1B\fMessageProtoP\x01Z4github.com/coro-sh/coro/proto/gen/broker/v1;brokerv1\xa2\x02\x03BXX\xaa\x02\tBroker.V1\xca\x02\tBroker\\V1\xe2\x02\x15Broker\\V1\\GPBMetadata\xea\x02\n" +
	"Broker::V1b\x06proto3"

var (
	file_broker_v1_message_proto_rawDescOnce sync.Once
	file_broker_v1_message_proto_rawDescData []byte
)

func file_broker_v1_message_proto_rawDescGZIP() []byte {
	file_broker_v1_message_proto_rawDescOnce.Do(func() {
		file_broker_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_broker_v1_message_proto_rawDesc), len(file_broker_v1_message_proto_rawDesc)))
	})
	return file_broker_v1_message_proto_rawDescData
}

var file_broker_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_broker_v1_message_proto_goTypes = []any{
	(*PublishMessage)(nil),                                // 0: broker.v1.PublishMessage
	(*ReplyMessage)(nil),                                  // 1: broker.v1.ReplyMessage
	(*Credentials)(nil),                                   // 2: broker.v1.Credentials
	(*PublishMessage_OperationRequest)(nil),               // 3: broker.v1.PublishMessage.OperationRequest
	(*PublishMessage_OperationStartConsumer)(nil),         // 4: broker.v1.PublishMessage.OperationStartConsumer
	(*PublishMessage_OperationStopConsumer)(nil),          // 5: broker.v1.PublishMessage.OperationStopConsumer
	(*PublishMessage_OperationSendConsumerHeartbeat)(nil), // 6: broker.v1.PublishMessage.OperationSendConsumerHeartbeat
}
var file_broker_v1_message_proto_depIdxs = []int32{
	3, // 0: broker.v1.PublishMessage.request:type_name -> broker.v1.PublishMessage.OperationRequest
	4, // 1: broker.v1.PublishMessage.start_consumer:type_name -> broker.v1.PublishMessage.OperationStartConsumer
	5, // 2: broker.v1.PublishMessage.stop_consumer:type_name -> broker.v1.PublishMessage.OperationStopConsumer
	6, // 3: broker.v1.PublishMessage.send_consumer_heartbeat:type_name -> broker.v1.PublishMessage.OperationSendConsumerHeartbeat
	2, // 4: broker.v1.PublishMessage.OperationStartConsumer.user_creds:type_name -> broker.v1.Credentials
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_broker_v1_message_proto_init() }
func file_broker_v1_message_proto_init() {
	if File_broker_v1_message_proto != nil {
		return
	}
	file_broker_v1_message_proto_msgTypes[0].OneofWrappers = []any{
		(*PublishMessage_Request)(nil),
		(*PublishMessage_StartConsumer)(nil),
		(*PublishMessage_StopConsumer)(nil),
		(*PublishMessage_SendConsumerHeartbeat)(nil),
	}
	file_broker_v1_message_proto_msgTypes[1].OneofWrappers = []any{}
	file_broker_v1_message_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_broker_v1_message_proto_rawDesc), len(file_broker_v1_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_broker_v1_message_proto_goTypes,
		DependencyIndexes: file_broker_v1_message_proto_depIdxs,
		MessageInfos:      file_broker_v1_message_proto_msgTypes,
	}.Build()
	File_broker_v1_message_proto = out.File
	file_broker_v1_message_proto_goTypes = nil
	file_broker_v1_message_proto_depIdxs = nil
}
