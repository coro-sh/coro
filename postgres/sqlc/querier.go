// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"
)

type Querier interface {
	BatchReadNamespaces(ctx context.Context, ids []string) ([]*Namespace, error)
	CreateAccount(ctx context.Context, arg CreateAccountParams) error
	CreateNamespace(ctx context.Context, arg CreateNamespaceParams) error
	CreateNkey(ctx context.Context, arg CreateNkeyParams) error
	CreateOperator(ctx context.Context, arg CreateOperatorParams) error
	CreateSigningKey(ctx context.Context, arg CreateSigningKeyParams) error
	CreateUser(ctx context.Context, arg CreateUserParams) error
	CreateUserJWTIssuance(ctx context.Context, arg CreateUserJWTIssuanceParams) error
	DeleteAccount(ctx context.Context, accountID string) error
	DeleteNamespace(ctx context.Context, namespaceID string) error
	DeleteOperator(ctx context.Context, operatorID string) error
	DeleteUser(ctx context.Context, userID string) error
	ListAccounts(ctx context.Context, arg ListAccountsParams) ([]*Account, error)
	ListNamespaces(ctx context.Context, arg ListNamespacesParams) ([]*Namespace, error)
	ListOperators(ctx context.Context, arg ListOperatorsParams) ([]*Operator, error)
	ListUserJWTIssuances(ctx context.Context, arg ListUserJWTIssuancesParams) ([]*UserJwtIssuance, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]*User, error)
	ReadAccount(ctx context.Context, id string) (*Account, error)
	ReadAccountByPublicKey(ctx context.Context, publicKey string) (*Account, error)
	ReadNamespace(ctx context.Context, id string) (*Namespace, error)
	ReadNamespaceByName(ctx context.Context, name string) (*Namespace, error)
	ReadNkey(ctx context.Context, id string) (*Nkey, error)
	ReadOperator(ctx context.Context, id string) (*Operator, error)
	ReadOperatorByName(ctx context.Context, name string) (*Operator, error)
	ReadOperatorByPublicKey(ctx context.Context, publicKey string) (*Operator, error)
	ReadOperatorToken(ctx context.Context, arg ReadOperatorTokenParams) (string, error)
	ReadSigningKey(ctx context.Context, id string) (*SigningKey, error)
	ReadUser(ctx context.Context, id string) (*User, error)
	ReadUserByName(ctx context.Context, arg ReadUserByNameParams) (*User, error)
	UpdateAccount(ctx context.Context, arg UpdateAccountParams) error
	UpdateOperator(ctx context.Context, arg UpdateOperatorParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
	UpsertOperatorToken(ctx context.Context, arg UpsertOperatorTokenParams) error
}

var _ Querier = (*Queries)(nil)
