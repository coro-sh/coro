services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    user: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres -h localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - example

  coro-pgtool:
    depends_on:
      db:
        condition: service_healthy
    image: corosh/coro-pgtool:latest
    ports:
      - "5400:5400"
    command: [ "--user", "postgres", "--password", "postgres", "--host", "db", "--port", "5432", "init" ]
    networks:
      - example

  coro:
    depends_on:
      db:
        condition: service_healthy
      coro-pgtool:
        condition: service_completed_successfully
    image: corosh/coro:latest
    ports:
      - "5400:5400"
    volumes:
      - "./config.yaml:/config.yaml:ro"
    command: [ "--service", "all", "--config", "config.yaml" ]
    networks:
      - example

networks:
  example:
    driver: bridge

volumes:
  nats-config: